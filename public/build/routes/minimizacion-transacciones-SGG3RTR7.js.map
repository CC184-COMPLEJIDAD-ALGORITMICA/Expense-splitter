{
  "version": 3,
  "sources": ["../../../app/routes/minimizacion-transacciones.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\minimizacion-transacciones.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\minimizacion-transacciones.tsx\");\n  import.meta.hot.lastModified = \"1726796315833.3167\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport { Form, useActionData, useSubmit } from '@remix-run/react';\nimport { json } from '@remix-run/node';\nimport { primAlgorithm } from '../utils/primAlgorithm';\nimport { exportToExcel } from '../utils/excelExport';\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const accounts = JSON.parse(formData.get('accounts'));\n  const result = primAlgorithm(accounts);\n  return json({\n    result\n  });\n};\nexport default function MinimizacionTransacciones() {\n  _s();\n  const actionData = useActionData();\n  const submit = useSubmit();\n  const [accounts, setAccounts] = useState([{\n    name: '',\n    balance: 0\n  }]);\n  const handleSubmit = event => {\n    event.preventDefault();\n    submit({\n      accounts: JSON.stringify(accounts)\n    }, {\n      method: 'post'\n    });\n  };\n  const handleAddAccount = () => {\n    setAccounts([...accounts, {\n      name: '',\n      balance: 0\n    }]);\n  };\n  const handleAccountChange = (index, field, value) => {\n    const newAccounts = [...accounts];\n    newAccounts[index] = {\n      ...newAccounts[index],\n      [field]: field === 'balance' ? parseFloat(value) : value\n    };\n    setAccounts(newAccounts);\n  };\n  const handleExport = () => {\n    if (actionData?.result) {\n      exportToExcel(actionData.result, 'Minimizacion_Transacciones');\n    }\n  };\n  return <div className=\"container mx-auto p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Minimizaci\u00F3n de Costos de Transacciones Bancarias</h1>\r\n      <Form method=\"post\" onSubmit={handleSubmit}>\r\n        {accounts.map((account, index) => <div key={index} className=\"mb-4\">\r\n            <input type=\"text\" placeholder=\"Nombre de la cuenta\" value={account.name} onChange={e => handleAccountChange(index, 'name', e.target.value)} className=\"mr-2 p-2 border rounded\" />\r\n            <input type=\"number\" placeholder=\"Balance\" value={account.balance} onChange={e => handleAccountChange(index, 'balance', e.target.value)} className=\"p-2 border rounded\" />\r\n          </div>)}\r\n        <button type=\"button\" onClick={handleAddAccount} className=\"mb-4 p-2 bg-blue-500 text-white rounded\">\r\n          Agregar Cuenta\r\n        </button>\r\n        <button type=\"submit\" className=\"p-2 bg-green-500 text-white rounded\">\r\n          Calcular\r\n        </button>\r\n      </Form>\r\n      {actionData?.result && <div className=\"mt-4\">\r\n          <h2 className=\"text-xl font-bold mb-2\">Resultados</h2>\r\n          <pre>{JSON.stringify(actionData.result, null, 2)}</pre>\r\n          <button onClick={handleExport} className=\"mt-2 p-2 bg-yellow-500 text-white rounded\">\r\n            Exportar a Excel\r\n          </button>\r\n        </div>}\r\n    </div>;\n}\n_s(MinimizacionTransacciones, \"z7cil0QRC/f2FFcX9ZYyouVXuWI=\", false, function () {\n  return [useActionData, useSubmit];\n});\n_c = MinimizacionTransacciones;\nvar _c;\n$RefreshReg$(_c, \"MinimizacionTransacciones\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAyB;AAEzB,kBAAqB;AAiDf;AAvEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sDAAwD,EAAE;AAAA,EACnG;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6C;AAC7C,cAAY,IAAI,eAAe;AACjC;AAkBe,SAAR,4BAA6C;AAClD,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,SAAS,UAAU;AACzB,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,CAAC;AAAA,IACxC,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC,CAAC;AACF,QAAM,eAAe,WAAS;AAC5B,UAAM,eAAe;AACrB,WAAO;AAAA,MACL,UAAU,KAAK,UAAU,QAAQ;AAAA,IACnC,GAAG;AAAA,MACD,QAAQ;AAAA,IACV,CAAC;AAAA,EACH;AACA,QAAM,mBAAmB,MAAM;AAC7B,gBAAY,CAAC,GAAG,UAAU;AAAA,MACxB,MAAM;AAAA,MACN,SAAS;AAAA,IACX,CAAC,CAAC;AAAA,EACJ;AACA,QAAM,sBAAsB,CAAC,OAAO,OAAO,UAAU;AACnD,UAAM,cAAc,CAAC,GAAG,QAAQ;AAChC,gBAAY,KAAK,IAAI;AAAA,MACnB,GAAG,YAAY,KAAK;AAAA,MACpB,CAAC,KAAK,GAAG,UAAU,YAAY,WAAW,KAAK,IAAI;AAAA,IACrD;AACA,gBAAY,WAAW;AAAA,EACzB;AACA,QAAM,eAAe,MAAM;AACzB,QAAI,YAAY,QAAQ;AACtB,oBAAc,WAAW,QAAQ,4BAA4B;AAAA,IAC/D;AAAA,EACF;AACA,SAAO,mDAAC,SAAI,WAAU,yBAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,oEAAxC;AAAA;AAAA;AAAA;AAAA,WAAyF;AAAA,IACzF,mDAAC,QAAK,QAAO,QAAO,UAAU,cAC3B;AAAA,eAAS,IAAI,CAAC,SAAS,UAAU,mDAAC,SAAgB,WAAU,QACzD;AAAA,2DAAC,WAAM,MAAK,QAAO,aAAY,uBAAsB,OAAO,QAAQ,MAAM,UAAU,OAAK,oBAAoB,OAAO,QAAQ,EAAE,OAAO,KAAK,GAAG,WAAU,6BAAvJ;AAAA;AAAA;AAAA;AAAA,eAAiL;AAAA,QACjL,mDAAC,WAAM,MAAK,UAAS,aAAY,WAAU,OAAO,QAAQ,SAAS,UAAU,OAAK,oBAAoB,OAAO,WAAW,EAAE,OAAO,KAAK,GAAG,WAAU,wBAAnJ;AAAA;AAAA;AAAA;AAAA,eAAwK;AAAA,WAFhI,OAAV;AAAA;AAAA;AAAA;AAAA,aAGhC,CAAM;AAAA,MACR,mDAAC,YAAO,MAAK,UAAS,SAAS,kBAAkB,WAAU,2CAA0C,8BAArG;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,YAAO,MAAK,UAAS,WAAU,uCAAsC,wBAAtE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAVF;AAAA;AAAA;AAAA;AAAA,WAWA;AAAA,IACC,YAAY,UAAU,mDAAC,SAAI,WAAU,QAClC;AAAA,yDAAC,QAAG,WAAU,0BAAyB,0BAAvC;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA,MACjD,mDAAC,SAAK,eAAK,UAAU,WAAW,QAAQ,MAAM,CAAC,KAA/C;AAAA;AAAA;AAAA;AAAA,aAAiD;AAAA,MACjD,mDAAC,YAAO,SAAS,cAAc,WAAU,6CAA4C,gCAArF;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SALmB;AAAA;AAAA;AAAA;AAAA,WAMrB;AAAA,OApBC;AAAA;AAAA;AAAA;AAAA,SAqBL;AACJ;AACA,GAAG,2BAA2B,gCAAgC,OAAO,WAAY;AAC/E,SAAO,CAAC,eAAe,SAAS;AAClC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,2BAA2B;AAE5C,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
